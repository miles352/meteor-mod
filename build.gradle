plugins {
    id "fabric-loom" version "1.8-SNAPSHOT"
}


archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name = "Meteor Dev Releases"
        url = "https://maven.meteordev.org/releases"
    }
    maven {
        name = "Meteor Dev Snapshots"
        url = "https://maven.meteordev.org/snapshots"
    }
}

loom {
    accessWidenerPath = file("src/main/resources/jeffmod.accesswidener")
}

dependencies {
    // Fabric
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Meteor
    modImplementation "meteordevelopment:meteor-client:${project.meteor_version}"
    // XaeroPlus
    modImplementation "maven.modrinth:xaeroplus:${project.xaeroplus_version}"
    // lenni
    modImplementation "net.lenni0451:LambdaEvents:2.4.2"
    modImplementation "com.github.ben-manes.caffeine:caffeine:3.1.8"

    modCompileOnly "meteordevelopment:baritone:${project.baritone_version}"
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version, "mc_version": project.minecraft_version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding("UTF-8")
}
